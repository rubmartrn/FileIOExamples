@page "/counter"
@using BlazorWASM.Apis
@using BlazorWASM.Clients
@using BlazorWASM.Constants
@using BlazorWASM.Models

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="GetOpenStudent">Click Open</button>

<AuthorizeView>
    <Authorized>
        <button class="btn btn-primary" @onclick="GetPrivateStudent">Click Closed</button>
    </Authorized>
    <NotAuthorized>
        <p> Խնդրում ենք մուտք կատարել այս կոճակը սեղմելու համար</p>
    </NotAuthorized>
</AuthorizeView>

<AuthorizeView Policy="@AuthConstants.NamePolicy">
    <Authorized>
        <button class="btn btn-primary" @onclick="AddStudent">Add Student</button>
    </Authorized>
    <NotAuthorized>
        <p> տվյալ յուզերի անունը Ռուբեն չի</p>
    </NotAuthorized>
</AuthorizeView>

<AuthorizeView Roles="@AuthConstants.StudentRole">
    <Authorized>
        Բարև Ռոլ
    </Authorized>
    <NotAuthorized>
        <p> Տվյալ Յուզերը չունի student role </p>
    </NotAuthorized>
</AuthorizeView>

<button class="btn btn-primary" >Click Closed</button>
@code {
    private int currentCount = 0;

    [Inject] private IStudentApi client { get; set; } = default!;
    private async Task GetOpenStudent()
    {
        try
        {
            var model1 = await client.GetOpenModel();
            Console.WriteLine(model1.Name);
        }
        catch (Exception ex)
        {
            throw;
        }

    }

    private async Task GetPrivateStudent()
    {
        try
        {
            var model2 = await client.GetPrivateStudentModel();
            Console.WriteLine(model2.Name);
        }
        catch (Exception ex)
        {
            throw;
        }
    }

    private async Task AddStudent()
    {
        var source = new CancellationTokenSource();
        source.CancelAfter(5000); // 5 seconds timeout
        var token = source.Token;
        var result = await client.Add(new StudentModel
            {
                Name = "Poghos",
                Id = 5
            }, token);

            Console.WriteLine(result.Name);
    }
}
