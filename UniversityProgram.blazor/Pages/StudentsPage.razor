@page "/students"
@using UniversityProgram.blazor.Apis
@using UniversityProgram.blazor.Models
@inject IStudentApi StudentApi

<PageTitle>Student</PageTitle>
<h3>StudentComponent</h3>

@if (isLoading)
{
    <p>Loading..</p>
}
else if (Students.Count == 0)
{
    <p>Ուսանող չկար</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Անուն</th>
                <th>Մեյլ</th>
                <th>Գումար</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in Students)
            {

                <tr>
                    <td><MudButton OnClick="() => OpenStudent(student.Id)">@student.Name</MudButton></td>
                    <td>@student.Email</td>
                    <td>@student.Money</td>
                    <td><MudButton OnClick="async ()=> await DeleteAsync(student.Id)" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Ջնջել</MudButton></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    [Inject] private NavigationManager NavigationManager { get; set; } = default!;
    private bool isLoading = true;
    public List<StudentModel> Students { get; set; } = new List<StudentModel>();

    override protected async Task OnInitializedAsync()
    {
        await GetStudents();
    }

    private async Task GetStudents()
    {
        Students = (await StudentApi.GetAll()).ToList();
        isLoading = false;
    }

    private async Task DeleteAsync(int id)
    {
        isLoading = true;
        await StudentApi.Delete(id);
        await GetStudents();
    }

    private void OpenStudent(int id)
    {
        NavigationManager.NavigateTo($"/student/{id}");
    }
}